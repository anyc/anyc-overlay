From 554de608b040567810da9a5c69ffd940c3939099 Mon Sep 17 00:00:00 2001
From: Armin Novak <armin.novak@gmail.com>
Date: Tue, 19 Jan 2016 23:33:54 +0100
Subject: [PATCH] Fix #32: Add own devices as possible OMEMO partners.

---
 lib/python-omemo/src/omemo/state.py | 24 +++++++++++++++++++++---
 1 files changed, 24 insertions(+), 5 deletions(-)

diff --git a/lib/python-omemo/src/omemo/state.py b/lib/python-omemo/src/omemo/state.py
index 531e8c4..07ece20 100644
--- a/src/omemo/state.py
+++ b/src/omemo/state.py
@@ -22,6 +22,7 @@
 
 from axolotl.ecc.djbec import DjbECPublicKey
 from axolotl.identitykey import IdentityKey
+from axolotl.duplicatemessagexception import DuplicateMessageException
 from axolotl.invalidmessageexception import InvalidMessageException
 from axolotl.invalidversionexception import InvalidVersionException
 from axolotl.nosessionexception import NoSessionException
@@ -36,14 +37,15 @@
 from .aes_gcm import NoValidSessions, aes_decrypt, aes_encrypt
 from .liteaxolotlstore import LiteAxolotlStore
 
-log = logging.getLogger('omemo')
-
+#log = logging.getLogger('omemo')
+log = logging.getLogger('gajim.plugin_system.omemo')
 
 class OmemoState:
     session_ciphers = {}
     encryption = None
 
     device_ids = {}
+    own_name = ''
     own_devices = []
 
     def __init__(self, connection):
@@ -89,7 +91,7 @@ def add_devices(self, name, devices):
         log.debug('Saving devices for ' + name + ' → ' + str(devices))
         self.device_ids[name] = devices
 
-    def add_own_devices(self, devices):
+    def add_own_devices(self, name, devices):
         """ Overwrite the current :py:attribute:`OmemoState.own_devices` with
             the given devices.
 
@@ -98,6 +100,7 @@ def add_own_devices(self, devices):
             devices : [int]
                 A list of device_ids
         """
+        self.own_name = name
         self.own_devices = devices
 
     @property
@@ -163,6 +166,19 @@ def decrypt_msg(self, msg_dict):
                 log.error('sender_jid →  ' + str(sender_jid) + ' sid =>' + str(
                     sid))
                 return
+            except (DuplicateMessageException) as e:
+                log.error('Duplicate message found ' + str(e.args))
+                log.error('sender_jid → ' + str(sender_jid) + ' sid => ' +str(sid))
+                return
+            except (Exception) as e:
+                log.error('Duplicate message found ' + str(e.args))
+                log.error('sender_jid → ' + str(sender_jid) + ' sid => ' +str(sid))
+                return
+
+        except (DuplicateMessageException):
+            log.error('Duplicate message found ' + e.message)
+            log.error('sender_jid → ' + str(sender_jid) + ' sid => ' +str(sid))
+            return
 
         result = unicode(aes_decrypt(key, iv, payload))
         log.debug("Decrypted msg ⇒ " + result)
@@ -224,6 +240,8 @@ def device_list_for(self, jid):
             jid : string
                 The contacts jid
         """
+        if jid == self.own_name:
+            return set(self.own_devices) - set({self.own_device_id})
         if jid not in self.device_ids:
             return set()
         return set(self.device_ids[jid])
